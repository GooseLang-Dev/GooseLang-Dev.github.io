"use strict";(self.webpackChunkgooselang_docs=self.webpackChunkgooselang_docs||[]).push([[7520],{4028:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"data-structure/question-data","title":"Question Data","description":"\ud83d\udcd8 Overview","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/data-structure/question-data.md","sourceDirName":"data-structure","slug":"/data-structure/question-data","permalink":"/dev/data-structure/question-data","draft":false,"unlisted":false,"editUrl":"https://github.com/GooseLang-Dev/gooselang.github.io/tree/main/i18n/en/docusaurus-plugin-content-docs/current/data-structure/question-data.md","tags":[],"version":"current","lastUpdatedBy":"BruceWJ","lastUpdatedAt":1754286127000,"sidebarPosition":3,"frontMatter":{"title":"Question Data","sidebar_position":3,"id":"question-data"},"sidebar":"devSidebar","previous":{"title":"Problem Data","permalink":"/dev/data-structure/problem-data"},"next":{"title":"Problem Records","permalink":"/dev/data-structure/problem-records"}}');var i=t(4848),o=t(8453);const r={title:"Question Data",sidebar_position:3,id:"question-data"},l="Question Data Structure & Model",a={},d=[{value:"\ud83d\udcd8 Overview",id:"-overview",level:2},{value:"\ud83d\udcc1 File Structure",id:"-file-structure",level:2},{value:"\ud83d\udcc4 Question Data Structure",id:"-question-data-structure",level:2},{value:"Doc Type Constants",id:"doc-type-constants",level:3},{value:"Question Document (<code>QuestionDoc</code> and Variants)",id:"question-document-questiondoc-and-variants",level:3},{value:"Base Interface",id:"base-interface",level:4},{value:"Question Type Variants",id:"question-type-variants",level:4},{value:"Key Fields",id:"key-fields",level:4},{value:"Related Types",id:"related-types",level:4},{value:"\ud83d\udce6 Question Model &amp; Logic",id:"-question-model--logic",level:2},{value:"Core Methods &amp; Logic (QuestionModel)",id:"core-methods--logic-questionmodel",level:3},{value:"\ud83d\udcdd Question Submission &amp; Progress Flow",id:"-question-submission--progress-flow",level:2},{value:"\ud83d\udccc Notes / Observations",id:"-notes--observations",level:2},{value:"\ud83d\udca1 Usage Examples",id:"-usage-examples",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"question-data-structure--model",children:"Question Data Structure & Model"})}),"\n",(0,i.jsx)(n.h2,{id:"-overview",children:"\ud83d\udcd8 Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The GooseLang ",(0,i.jsx)(n.strong,{children:"Question"})," data structure and model provide a robust, extensible system for managing individual questions within language learning problems. Each question represents a specific exercise or prompt (e.g., text, audio, multiple choice) that is part of a larger problem. The model supports various question types, rich metadata, and integration with the problem and document systems."]}),"\n",(0,i.jsx)(n.p,{children:"The model is designed to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Store and retrieve question definitions and metadata"}),"\n",(0,i.jsx)(n.li,{children:"Support multiple question types (text, audio, calligraphy, match, multi-choice)"}),"\n",(0,i.jsx)(n.li,{children:"Enable localization and flexible content structures"}),"\n",(0,i.jsx)(n.li,{children:"Integrate tightly with problems, user submissions, and progress tracking"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-file-structure",children:"\ud83d\udcc1 File Structure"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"src/model/question.ts"}),": Main implementation of the ",(0,i.jsx)(n.code,{children:"QuestionModel"})," class, providing core logic for question management, including CRUD operations and business rules."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"src/interface.ts"}),": TypeScript interfaces and type definitions for all question-related documents and data structures."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"docs/data-structure/question-data.md"}),": This documentation file, describing the data model and its usage."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-question-data-structure",children:"\ud83d\udcc4 Question Data Structure"}),"\n",(0,i.jsx)(n.h3,{id:"doc-type-constants",children:"Doc Type Constants"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export const TYPE_QUESTION = 20; // Question document type\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"question-document-questiondoc-and-variants",children:["Question Document (",(0,i.jsx)(n.code,{children:"QuestionDoc"})," and Variants)"]}),"\n",(0,i.jsx)(n.p,{children:"Represents a single question in the system, with all associated metadata and content. The system supports several question types, each with its own structure."}),"\n",(0,i.jsx)(n.h4,{id:"base-interface",children:"Base Interface"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface QuestionBaseDoc {\n    _id: ObjectId;\n    onwer: number; // uid of the question owner\n    docId: number;\n    spaceId: string;\n    parentType: number;\n    parentId: ObjectId | number | string;\n    docType: typeof TYPE_QUESTION;\n    content?: LocalizedContent; // question title\n    instruciton?: LocalizedContent; // instruction for the question\n    isManualJudge?: boolean;\n    hasAbsoluteAnswer?: boolean;\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"question-type-variants",children:"Question Type Variants"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'export interface TextQuestionDoc extends QuestionBaseDoc {\n    type: \'text\';\n    textLongContext: boolean;\n    textLongAnswer: string;\n    textShortAnswer: string;\n}\n\nexport interface AudioQuestionDoc extends QuestionBaseDoc {\n    type: \'audio\';\n    audioLongContext: boolean;\n    audioShortAnswer: string;\n    audioLongAnswer: string;\n}\n\nexport interface CalligraphyQuestionDoc extends QuestionBaseDoc {\n    type: \'calligraphy\';\n    answer: string;\n}\n\nexport interface MatchQuestionDoc extends QuestionBaseDoc {\n    type: \'match\';\n    translateOptions: boolean;\n    targetOptionType: "txt" | "audio";\n    sourceOptiontType: "txt" | "image";\n    targetOptions: string[];\n    sourceOptions: LocalizedContent[];\n}\n\nexport interface MultiQuestionDoc extends QuestionBaseDoc {\n    type: \'multi\';\n    translateOptions: boolean;\n    hasAbsoluteAnswer: boolean;\n    inOrder: boolean;\n    optionType: "text" | "audio" | "image";\n    options: LocalizedContent;\n}\n\n// Union type for all question types\nexport type QuestionDoc =\n    | TextQuestionDoc\n    | AudioQuestionDoc\n    | CalligraphyQuestionDoc\n    | MatchQuestionDoc\n    | MultiQuestionDoc;\n'})}),"\n",(0,i.jsx)(n.h4,{id:"key-fields",children:"Key Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"type"}),": The question type (text, audio, calligraphy, match, multi)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"content"}),": Localized question prompt/title"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"instruciton"}),": Localized instructions (optional)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"answer/shortAnswer/longAnswer/options"}),": Type-specific answer fields"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"parentType/parentId"}),": Links the question to its parent problem"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isManualJudge/hasAbsoluteAnswer"}),": Judging and answer logic flags"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"related-types",children:"Related Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LocalizedContent"}),": Multilingual content (e.g., ",(0,i.jsx)(n.code,{children:'{ en: "...", zh: "..." }'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ObjectId"}),": MongoDB object identifier"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-question-model--logic",children:"\ud83d\udce6 Question Model & Logic"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"QuestionModel"})," class (in ",(0,i.jsx)(n.code,{children:"model/question.ts"}),") provides all business logic for managing questions. Key responsibilities include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CRUD Operations"}),": Add, edit, delete, and retrieve questions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Handling"}),": Support for multiple question types and flexible content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration"}),": Tight linkage with problems, user submissions, and the document system"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"core-methods--logic-questionmodel",children:"Core Methods & Logic (QuestionModel)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"get(spaceId, qid)"}),": Retrieve a question by its ObjectId"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"getList(spaceId, parentId, projection?)"}),": Retrieve all questions for a given problem"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"getMulti(spaceId, projection?)"}),": Retrieve all questions in a space"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"add(spaceId, problemDocId, owner)"}),": Create a new question for a problem"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"edit(spaceId, docId, $set)"}),": Update question fields"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"del(spaceId, qid)"}),": Delete a question by its ObjectId"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All methods interact with the ",(0,i.jsx)(n.code,{children:"document"})," MongoDB collection, using the ",(0,i.jsx)(n.code,{children:"docType"})," field to distinguish document roles."]}),"\n",(0,i.jsx)(n.h2,{id:"-question-submission--progress-flow",children:"\ud83d\udcdd Question Submission & Progress Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem Author Adds Question"}),": A question is created and linked to a problem."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Attempts Question"}),": The question is presented as part of a problem; user submits an answer."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Answer Evaluation"}),": Depending on type and flags, answers may be auto-judged or require manual review."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Progress Tracking"}),": User submissions and scores are tracked at the problem and question level."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-notes--observations",children:"\ud83d\udccc Notes / Observations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extensibility"}),": The model supports new question types via interface extension."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Localization"}),": All user-facing content (prompt, instructions) is localized via ",(0,i.jsx)(n.code,{children:"LocalizedContent"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parent Linking"}),": Each question is linked to a parent problem for context and aggregation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Judging Logic"}),": Supports both auto and manual judging, as well as absolute answer checking."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration"}),": The Question model is tightly integrated with the problem, document, and user progress systems."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"}),": Most methods throw descriptive errors if data is missing or invalid, aiding debugging and robustness."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-usage-examples",children:"\ud83d\udca1 Usage Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Add a new text question to a problem\nawait QuestionModel.add('space123', 101, 1); // spaceId, problemDocId, owner\n\n// Get all questions for a problem\nconst questions = await QuestionModel.getList('space123', 101);\n\n// Edit a question's content\nawait QuestionModel.edit('space123', 5, { content: { en: 'What is your name?' } });\n\n// Delete a question\nawait QuestionModel.del('space123', new ObjectId('...'));\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["For further details, see the source code in ",(0,i.jsx)(n.code,{children:"src/model/question.ts"})," and ",(0,i.jsx)(n.code,{children:"src/interface.ts"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);